import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from scipy.cluster.hierarchy import dendrogram, linkage
import seaborn as sns

df = pd.read_csv('sales_data_sample.csv',encoding='latin1')

df_clustering = df[['ORDERLINENUMBER', 'SALES']]

df_clustering = df_clustering.dropna()

aler = StandardScaler()
scaled_data = scaler.fit_transform(df_clustering)

wcss = []  
for i in range(1, 11):  
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(scaled_data)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(8, 6))
plt.plot(range(1, 11), wcss, marker='o')
plt.title('Elbow Method for Optimal k')
plt.show()

optimal_k = 3 
kmeans = KMeans(n_clusters=optimal_k, init='k-means++', random_state=42)
df['KMeans_Cluster'] = kmeans.fit_predict(scaled_data)


Z = linkage(scaled_data, method='ward', metric='euclidean')

plt.figure(figsize=(10, 7))
dendrogram(Z)
plt.title('Dendrogram for Hierarchical Clustering')
plt.xlabel('Data Points')
plt.ylabel('Euclidean Distance')
plt.show()







